name: Deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: Deployment environment (`acceptance` and `production` only run on tags)
        default: development
        type: choice
        options:
          - feature
          - development
          - test
          - acceptance
          - production

env:
  REGISTRY: ghcr.io

jobs:
  Deploy:
    runs-on: ubuntu-20.04
    environment: {% raw %}${{ github.event.inputs.environment }}{% endraw %}
    if: |
      (github.event.inputs.environment != 'acceptance' && github.event.inputs.environment != 'production') ||
      ((github.event.inputs.environment != '') && startsWith(github.ref, 'refs/tags/'))

    steps:
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: test.yml
          workflow_conclusion: success
          commit: {% raw %}${{ github.sha }}{% endraw %}
          name: ci-image-hash

      - name: Load base image variable from `test.yml` artifact
        id: base_image
        shell: bash
        run: |
          source .ci_image_hash
          echo ::set-output name=DOCKER_BASE_IMAGE::$DOCKER_BASE_IMAGE

      - name: Checkout
        uses: actions/checkout@v2

      - name: Compute App image SHA
        id: image_sha
        shell: bash
        run: |
          if [[ "$GITHUB_REF" == *"/tags/"* ]]
            then DOCKER_IMAGE_SHA="$GITHUB_REF_NAME"
          else
            DOCKER_IMAGE_SHA="${GITHUB_SHA:0:8}"
          fi
          echo ::set-output name=DOCKER_IMAGE_SHA::$DOCKER_IMAGE_SHA

      - name: Build and Push App
        id: build_push_app
        uses: ./.github/workflows/build_push
        with:
          DOCKER_REGISTRY: {% raw %}${{ env.REGISTRY }}{% endraw %}
          DOCKER_USER: {% raw %}${{ github.actor }}{% endraw %}
          DOCKER_PASSWORD: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          DOCKER_IMAGE: "{% raw %}${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ github.repository }}{% endraw %}"
          DOCKER_TARGET: "app"
          DOCKER_PUSH: 1
          DOCKER_BASE_IMAGE: {% raw %}${{ steps.base_image.outputs.DOCKER_BASE_IMAGE }}{% endraw %}
          DOCKER_IMAGE_SHA: {% raw %}${{ steps.image_sha.outputs.DOCKER_IMAGE_SHA }}{% endraw %}
