name: Test
on:
  push:
  pull_request:

env:
  REGISTRY: ghcr.io

jobs:
  Test:
    
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python {% raw %}${{ matrix.python-version }}{% endraw %}
        uses: actions/setup-python@v3
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: Cache Python environment
        uses: actions/cache@v3
        with:
          path: .venv/
          key: {% raw %}venv-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}{% endraw %}

      - name: Install Poetry
        run: pip install --no-input poetry

      - name: Install Python environment
        run: |
          {%- if cookiecutter.private_package_repository_name %}
          poetry config http-basic.{{ cookiecutter.private_package_repository_name|slugify }} "{% raw %}${{{% endraw %} secrets.POETRY_HTTP_BASIC_{{ cookiecutter.private_package_repository_name|slugify|upper|replace("-", "_") }}_USERNAME }}" "{% raw %}${{{% endraw %} secrets.POETRY_HTTP_BASIC_{{ cookiecutter.private_package_repository_name|slugify|upper|replace("-", "_") }}_PASSWORD }}"
          {%- endif %}

      - name: Lint and Test
        id: lint_test
        shell: bash
        run: docker run --mount type=bind,src=$PWD,dst=/app --rm {% raw %}${{ steps.build_push_ci.outputs.DOCKER_TAG_SHA }}{% endraw %} /bin/bash -c "set -e; poetry install --no-interaction; poe lint; poe test"

      - name: Upload Lint and Test results (on failure only)
        if: failure() && steps.lint_test.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: junit
          path: |
            ./reports/mypy.xml
            ./reports/pytest.xml

      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: cobertura
          path: ./reports/coverage.xml

      - name: Persist CI hash locally
        shell: bash
        run: echo "DOCKER_BASE_IMAGE={% raw %}${{ steps.build_push_ci.outputs.DOCKER_TAG_SHA }}{% endraw %}" > .ci_image_hash

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          name: ci-image-hash
          path: .ci_image_hash
