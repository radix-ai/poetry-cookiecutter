{
    "name": "{{ cookiecutter.__package_name_kebab_case }}",
    "dockerComposeFile": "../docker-compose.yml",
    "service": "devcontainer",
    "workspaceFolder": "/app/",
    "remoteUser": "app",
    "overrideCommand": true,
    "postStartCommand": "cp --update /opt/build/poetry/poetry.lock /app/ && mkdir -p /app/.git/hooks/ && cp --update /opt/build/git/* /app/.git/hooks/",
    "customizations": {
        "vscode": {
            "extensions": [
                "charliermarsh.ruff",
                "ms-python.python",
                "ryanluker.vscode-coverage-gutters",
                "tamasfe.even-better-toml",
                "visualstudioexptteam.vscodeintellicode"
            ],
            "settings": {
                "coverage-gutters.coverageFileNames": [
                    "reports/coverage.xml"
                ],
                "editor.codeActionsOnSave": {
                    "source.fixAll": true,
                    "source.organizeImports": true
                },
                "editor.formatOnSave": true,
                "editor.rulers": [
                    100
                ],
                "files.autoSave": "onFocusChange",
                "python.defaultInterpreterPath": "/opt/app-env/bin/python",
                "python.formatting.provider": "black",
                "python.linting.banditArgs": [
                    "--configfile",
                    "pyproject.toml"
                ],
                "python.linting.mypyEnabled": true,
                "python.terminal.activateEnvironment": false,
                "python.testing.pytestEnabled": true,
                "ruff.importStrategy": "fromEnvironment",
                {%- if cookiecutter.development_environment == "strict" %}
                "ruff.logLevel": "warn",
                {%- endif %}
                "terminal.integrated.defaultProfile.linux": "zsh",
                "terminal.integrated.profiles.linux": {
                    "zsh": {
                        "path": "/usr/bin/zsh"
                    }
                }
            }
        }
    }
}